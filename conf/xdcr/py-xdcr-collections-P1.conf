#High num scopes, collections
xdcr.uniXDCR.unidirectional.load_with_async_ops,rdirection=unidirection,ctopology=chain,replication_type=xmem,collection_density=high
xdcr.uniXDCR.unidirectional.load_with_async_ops,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,replication_type=xmem,collection_density=random
xdcr.uniXDCR.unidirectional.load_with_async_ops,rdirection=unidirection,ctopology=chain,replication_type=xmem,sasl_buckets=1,collection_density=high
xdcr.biXDCR.bidirectional.load_with_async_ops_and_joint_sets,ctopology=chain,rdirection=bidirection,replication_type=xmem,collection_density=high
#Explicit mapping
##syntax
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,mapping_rules=C1,explicit_map_index=1,rdirection=unidirection,ctopology=chain,replication_type=xmem
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,new_scope_collection=C2:C1,scope_name=a-%s-s%-z,collection_name=1%-c-%2,mapping_rules=C1:C2,explicit_map_index=2,rdirection=bidirection,replication_type=xmem,collection_density=medium
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,new_scope_collection=C1:C2,scope_name=a-%s-s%-z,collection_name=1%-c-%2,mapping_rules=C1:C2,explicit_map_index=2,rdirection=bidirection,replication_type=xmem,collection_density=medium
##scope->scope
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,mapping_rules=C1,explicit_map_index=3,rdirection=unidirection,ctopology=chain,replication_type=xmem
##scope->scope, collection->collection
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,skip_src_validation=true,mapping_rules=C1,explicit_map_index=4,rdirection=unidirection,replication_type=xmem
##bucket->bucket, scope->scope, collection->collection
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'0$'),mapping_rules=C1,explicit_map_index=5,rdirection=unidirection,replication_type=xmem,collection_density=medium
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,rdirection=unidirection,standard_buckets=1,sasl_buckets=1,replication_type=xmem,sasl_bucket_1@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'1$'),explicit_mapping:true,colmapping_rules:{"_default"colon"_default"},default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'^1'),explicit_mapping:true,colmapping_rules:{"_default"colonnull},checkpoint_interval:80,failure_restart_interval:20,timeout_percentage:60,standard_bucket_1@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'1$')
##common target
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'1$'),explicit_mapping:true,colmapping_rules:{"_default"colon"_default"comma"scope_1"colon"scope_1"},rdirection=unidirection,replication_type=xmem
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,default@C1=filter_expression:REGEXP_CONTAINS(META()dotidcomma'02$'),explicit_mapping:true,colmapping_rules:{"_defaultdot_default"colon"_defaultdot_default"comma"scope_1dotcollection_1"colon"scope_1dotcollection_1"},rdirection=unidirection,replication_type=xmem
##scope->null
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,default@C1=explicit_mapping:true,colmapping_rules:{"_default"colon"_default"comma"scope_1"colonnull},rdirection=unidirection,replication_type=xmem
##collection->null
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,default@C1=explicit_mapping:true,colmapping_rules:{"_default"colon"_default"comma"scope_1dotcollection_1"colonnull},rdirection=unidirection,replication_type=xmem
##DNE source scope,collection
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,mapping_rules=C1,skip_src_validation=true,explicit_map_index=6,rdirection=unidirection,replication_type=xmem
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,mapping_rules=C1,explicit_map_index=7,rdirection=unidirection,replication_type=xmem
##DNE target scope,collection
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,skip_src_validation=true,default@C1=explicit_mapping:true,colmapping_rules:{"_default"colon"nonexistent"comma"scope_1dotcollection_1"colon"scope_1dotnonexistent"},rdirection=unidirection,replication_type=xmem
##Mapping repair
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,new_collection=C1:C2,rdirection=unidirection,replication_type=xmem,collection_density=medium,default@C1=explicit_mapping:true,colmapping_rules:{"_defaultdot_default"colon"_defaultdotnew_collection"}
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,new_scope_collection=C1:C2,rdirection=unidirection,replication_type=xmem,collection_density=medium,default@C1=explicit_mapping:true,colmapping_rules:{"_defaultdot_default"colon"new_scopedotnew_collection"}
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,new_scope_collection=C1:C2,rdirection=bidirection,replication_type=xmem,collection_density=medium,default@C1=explicit_mapping:true,colmapping_rules:{"_defaultdot_default"colon"new_scopedotnew_collection"}
#Expiry
xdcr.uniXDCR.unidirectional.load_with_async_ops,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,sasl_buckets=1,replication_type=xmem,expires=100,maxttl=80
xdcr.uniXDCR.unidirectional.load_with_async_ops,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,sasl_buckets=1,replication_type=xmem,expires=80,maxttl=100
#Migration mode
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_implicit_mapping
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_empty_mapping
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_1rule_mapping
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_2rule_mapping
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_adv_filter
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_incremental
# Migration + Cluster Ops
# pause-resume
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_incremental_with_clusterop,pause=C1:C2
# pause-resume + graceful failover + rebalance-out
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_incremental_with_clusterop,pause=C1:C2,failover=C1:C2,graceful=True
# bi-xdcr + rebalance-in
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_incremental_with_clusterop,rebalance_in=C1:C2,rdirection=bidirection
# bi-xdcr + reboot
xdcr.collectionsMappingXDCR.XDCRCollectionsTests.test_migration_incremental_with_clusterop,reboot=C1:C2,rdirection=bidirection
# OSO
xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,oso_mode=C1:C2,rdirection=unidirection,ctopology=chain,replication_type=xmem,collection_density=medium
# CMD
#xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,consistent_metadata=C1:C2,rdirection=unidirection,ctopology=chain,replication_type=xmem,collection_density=medium
#xdcr.collectionsXDCR.XDCRCollectionsTests.test_xdcr_with_collections,consistent_metadata=C1:C2,rdirection=bidirection,ctopology=chain,replication_type=xmem,collection_density=medium

# migration mode with multiple targets
xdcr.collectionsXDCR.XDCRCollectionsTests.test_collections_migration_multi_target