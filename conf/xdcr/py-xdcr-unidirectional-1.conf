xdcr.uniXDCR.unidirectional:

    #Incremental Load with ops
    load_with_async_ops,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,sasl_buckets=1,replication_type=xmem,GROUP=CHAIN;P0;xmem
    load_with_async_ops,items=100000,rdirection=unidirection,ctopology=chain,delete=C1,GROUP=CHAIN;P1

    #Incremental Load with ops [dataset contains expired items]
    load_with_async_ops,items=100000,rdirection=unidirection,ctopology=chain,expires=300,update=C1,delete=C1,replication_type=xmem,GROUP=CHAIN;P0;xmem
    load_with_async_ops,items=100000,rdirection=unidirection,ctopology=chain,expires=300,standard_buckets=1,sasl_buckets=2,default_bucket=False,delete=C1,GROUP=CHAIN;P1

    #Incremental loads with warmup
    load_with_async_ops_with_warmup,items=100000,rdirection=unidirection,ctopology=chain,sasl_buckets=1,delete=C1,warm=C1,replication_type=xmem,GROUP=P0;CHAIN;xmem
    load_with_async_ops_with_warmup,items=100000,rdirection=unidirection,ctopology=chain,standard_buckets=1,update=C1,delete=C1,warm=C2,GROUP=CHAIN;P1
    load_with_async_ops_with_warmup,items=100000,rdirection=unidirection,ctopology=chain,delete=C1,warm=C1-C2,GROUP=CHAIN;P1

    #Incremental loads with warmup at Master
    load_with_async_ops_with_warmup_master,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,warm=C1,GROUP=CHAIN;P1
    load_with_async_ops_with_warmup_master,items=100000,rdirection=unidirection,ctopology=chain,sasl_buckets=2,update=C1,delete=C1,warm=C2,replication_type=xmem,GROUP=P0;CHAIN;xmem
    load_with_async_ops_with_warmup_master,items=100000,rdirection=unidirection,ctopology=chain,standard_buckets=1,update=C1,delete=C1,warm=C1-C2,GROUP=CHAIN;P1

    # Failover and Add Back - Destination only
    load_with_failover_then_add_back,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,failover=C2,GROUP=CHAIN;P2

    #Failover Master
    load_with_failover_master,items=100000,rdirection=unidirection,ctopology=chain,standard_buckets=1,default_bucket=False,update=C1,delete=C1,failover=C2,replication_type=xmem,GROUP=P2;CHAIN;xmem

    #Firewall on/off at source/destination cluster
#     replication_with_firewall_enabled,items=100000,rdirection=unidirection,ctopology=chain,GROUP=CHAIN;P2
#     replication_with_firewall_enabled,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,GROUP=CHAIN;P2

    #LOAD WITH OPS WHILE REBOOTING NODES
#     replication_while_rebooting_a_non_master_destination_node,items=100000,rdirection=unidirection,ctopology=chain,update=C1,delete=C1,GROUP=CHAIN;P2

    # Moving to unstable
    # optimistic replication test with compression enabled
    # test_optimistic_replication,items=10000,value_size=1000,rdirection=unidirection,standard_buckets=1,default@C1=optimistic_threshold:900,compression_type:None,standard_bucket_1@C1=optimistic_threshold:1100,compression_type:None,GROUP=CHAIN;P2

    # Test for checking xdcr log file in cbcollectinfo
    #collectinfotest_for_xdcr,filename=collectInfo,GROUP=CHAIN;P2

    verify_replications_deleted_after_bucket_deletion,items=10000,rdirection=unidirection,BUGS=MB-9548,GROUP=CHAIN;P2
    test_replication_restart_after_auth_err,rdirection=unidirection
    test_replication_existence_after_target_bucket_delete,rdirection=unidirection,bucket_name=new_bucket,GROUP=CHAIN;P2

xdcr.targetAwarenessXDCR.TargetAwarenessXDCR:
    test_target_awareness,rdirection="unidirection"

xdcr.xdcrMiscTests.XdcrMiscTests:
    test_xdcr_within_same_cluster,items=10000,replication_type=xmem,default_bucket=False,standard_buckets=2,GROUP=P2
