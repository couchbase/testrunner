#SwapRebalance Test Matrix
swaprebalance.SwapRebalanceFailedTests:
# Multiple Failed rebalances : by killing memcached
    test_failed_swap_rebalance,replica=1,num-buckets=1,num-swap=2,percentage_progress=40,GROUP=P0
    test_failed_swap_rebalance,replica=2,num-buckets=3,num-swap=1,percentage_progress=60,GROUP=P2
#Add back some node after failing it over
    test_add_back_failed_node,replica=1,num-buckets=1,num-swap=2,GROUP=P0
    test_add_back_failed_node,replica=2,num-buckets=3,num-swap=2,GROUP=P1
    test_add_back_failed_node,replica=2,num-buckets=2,num-swap=2,swap-orchestrator=True,GROUP=P0
    test_add_back_failed_node,replica=3,num-buckets=5,num-swap=2,swap-orchestrator=True,GROUP=P2
# Swap rebalance with failed nodes
    test_failover_swap_rebalance,replica=1,num-buckets=2,num-swap=2,GROUP=P0
    test_failover_swap_rebalance,replica=1,num-buckets=3,num-swap=2,GROUP=P1
    test_failover_swap_rebalance,replica=1,num-buckets=4,num-swap=1,swap-orchestrator=True,GROUP=P1
    test_failover_swap_rebalance,replica=1,num-buckets=4,num-swap=2,swap-orchestrator=True,GROUP=P0

swaprebalance.SwapRebalanceBasicTests:
# num_swap = 1, replica=1 and varying num-buckets
    do_test,replica=2,num-buckets=3,num-swap=1,GROUP=P1
    do_test,replica=1,num-buckets=3,num-swap=2,GROUP=P2
    do_test,replica=1,num-buckets=1,num-swap=2,GROUP=P0
    do_test,replica=2,num-buckets=4,num-swap=1,swap-orchestrator=True,GROUP=P0

swaprebalance.SwapRebalanceStartStopTests:
    do_test,replica=1,num-buckets=1,num-swap=1,GROUP=P0
    do_test,replica=2,num-buckets=4,num-swap=2,GROUP=P1
    do_test,replica=3,num-buckets=4,num-swap=2,GROUP=P2
    do_test,replica=2,num-buckets=5,num-swap=2,swap-orchestrator=True,GROUP=P1
