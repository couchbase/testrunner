ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest:
    #existing cluster - force update
    test_backup_restore_sanity,items=1000,reset-restore-cluster=False,force-updates=True,GROUP=P0
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,reset-restore-cluster=False,force-updates=True,GROUP=P1
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,reset-restore-cluster=False,force-updates=True,GROUP=P1
    test_backup_restore_sanity,items=1000,number_of_backups=2,reset-restore-cluster=False,force-updates=True,GROUP=P1
    test_backup_restore_sanity,items=1000,number_of_backups=5,reset-restore-cluster=False,force-updates=True,GROUP=P1
    test_backup_restore_sanity,items=1000,number_of_backups=10,reset-restore-cluster=False,force-updates=True,GROUP=P2
    #
    ##  backup restore with ephemeral bucket
    test_backup_restore_sanity,items=1000,bucket_type=ephemeral,GROUP=P0
    test_backup_restore_sanity,items=1000,number_of_backups=2,bucket_type=ephemeral,GROUP=P1
    test_backup_restore_sanity,items=1000,number_of_backups=5,bucket_type=ephemeral,GROUP=P1
    test_backup_restore_sanity,items=1000,number_of_backups=10,bucket_type=ephemeral,GROUP=P2
    #
    # test backup restore with purge interval set to float value as in MB-25770
    test_backup_with_purge_interval_set_to_float,nodes_init=2,same-cluster=True,GROUP=P0
    #
    ## test backup and restore with non exist bucket
    test_restore_with_non_exist_bucket,items=1000,skip_buckets=True,GROUP=P0,should-fail=True,expected_error=Error restoring cluster: Bucket default doesn't exist
    test_restore_with_non_exist_bucket,items=1000,skip_buckets=True,GROUP=P0,bucket_type=ephemeral,should-fail=True,expected_error=Error restoring cluster: Bucket default doesn't exist
    #
    ## ops_type create and delete are to be added - need to clarify behaviour for parallel ops while taking backup
    test_backup_restore_with_ops,items=1000,force-updates=True,GROUP=P0
    test_backup_restore_with_ops,items=1000,number_of_backups=2,force-updates=True,GROUP=P0
    test_backup_restore_with_ops,items=1000,number_of_backups=5,force-updates=True,GROUP=P1
    test_backup_restore_with_ops,items=1000,number_of_backups=10,force-updates=True,GROUP=P2
    #
    ## backup with comression flag
    # compress data is set as default from 6.5 test_backup_with_compress_flag,items=100000,backup-compressed=True,value_size=1024,GROUP=P0
    #
    ## backup with eventing sainty
    test_cbbackupmgr_with_eventing,default_bucket=False,dataset=default,GROUP=P0
    #
    ## test backup and restore with credentials environment
    test_backup_restore_with_credentials_env,items=1000,user-env=True,GROUP=P0
    test_backup_restore_with_credentials_env,items=1000,passwd-env=True,GROUP=P0
    test_backup_restore_with_credentials_env,items=1000,user-env=True,passwd-env=True,GROUP=P0
    test_backup_restore_with_credentials_env,items=1000,user-env=True,overwrite-user-env=True,GROUP=P1
    test_backup_restore_with_credentials_env,items=1000,passwd-env=True,overwrite-passwd-env=True,GROUP=P1
    test_backup_restore_with_credentials_env,items=1000,user-env=True,passwd-env=True,overwrite-user-env=True,overwrite-passwd-env=True,GROUP=P0
    #
    #backup while rebalance is going on - fresh cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True,GROUP=P0
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1
    #backup after rebalance is done - fresh cluster
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True,GROUP=P0
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1
    #backup while rebalance is going on - existing cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True,GROUP=P0
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True,GROUP=P1

    #
    ## test cbrestoremgr should not change replia number in restore bucket MB-25809
    test_cbrestoremgr_should_not_change_replica_count_in_restore_bucket,default_bucket=False,sasl_buckets=1,new-replicas=2,GROUP=P0
    test_cbrestoremgr_should_not_change_replica_count_in_restore_bucket,default_bucket=False,sasl_buckets=3,new-replicas=2,GROUP=P0
    test_cbrestoremgr_should_not_change_replica_count_in_restore_bucket,default_bucket=False,sasl_buckets=1,new-replicas=3,GROUP=P1
    test_cbrestoremgr_should_not_change_replica_count_in_restore_bucket,default_bucket=False,sasl_buckets=3,new-replicas=3,GROUP=P1
