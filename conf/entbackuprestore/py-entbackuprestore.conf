ent_backup_restore.enterprise_backup_restore_test.EnterpriseBackupRestoreTest:
    test_backup_restore_sanity,items=1000
    test_restore_single_full_backup
    test_restore_single_incr_backup
    test_start_full_end_incr
    test_start_incr_end_full
    test_backup_restore_sanity,lww_new=True,items=1000,expected_error=Error restoring cluster: Unable to restore data because the backup for the `default` uses seqno based conflict resolution, but the target bucket `default` uses lww based conflict resolution
    test_backup_restore_sanity,lww=True,lww_new=False,items=1000,expected_error=Error restoring cluster: Unable to restore data because the backup for the `default` uses lww based conflict resolution, but the target bucket `default` uses seqno based conflict resolution
    # MB-21795
    test_backup_restore_sanity,lww_new=True,disable-conf-res-restriction=True,items=1000
    test_backup_restore_sanity,lww=True,lww_new=False,disable-conf-res-restriction=True,items=1000
    test_backup_restore_sanity,lww_new=True,disable-conf-res-restriction=True,force-updates=True,items=1000
    test_backup_restore_sanity,lww=True,lww_new=False,disable-conf-res-restriction=True,force-updates=True,items=1000
    test_backup_restore_sanity,disable-bucket-config=True,items=1000,GROUP=P0
    test_backup_restore_sanity,disable-data=True,items=1000,GROUP=P0
    test_backup_restore_sanity,disable-ft-alias=True,items=1000,GROUP=P0
    test_backup_restore_sanity,disable-ft-indexes=True,items=1000,GROUP=P0
    test_backup_restore_sanity,disable-gsi-indexes=True,items=1000,GROUP=P0
    test_backup_restore_sanity,disable-views=True,items=1000,GROUP=P0
    test_backup_restore_sanity,auto-create-buckets=True,items=1000,GROUP=P1
    test_backup_create
    test_backup_create,exclude-buckets='default'
    test_backup_create,include-buckets='default'
    test_backup_create,disable-analytics=True
    test_backup_create,disable-ft-alias=True
    test_backup_create,disable-bucket-config=True,disable-views=True,disable-gsi-indexes=True,disable-ft-indexes=True,disable-data=True
    #
    ## test with invalid json file in bucket-config.json
    test_restore_with_invalid_bucket_config_json,items=1000,number_of_backups=2
    #
    ## fresh cluster - no force update
    test_backup_restore_sanity,items=1000
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1
    test_backup_restore_sanity,items=1000,number_of_backups=2
    test_backup_restore_sanity,items=1000,number_of_backups=5
    test_backup_restore_sanity,items=1000,number_of_backups=10
    #existing cluster - no force update
    test_backup_restore_sanity,items=1000,reset-restore-cluster=False
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,reset-restore-cluster=False
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,reset-restore-cluster=False
    #fresh cluster - force update
    test_backup_restore_sanity,items=1000,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=2,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=5,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=10,force-updates=True
    #existing cluster - force update
    test_backup_restore_sanity,items=1000,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,sasl_buckets=1,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,default_bucket=False,standard_buckets=1,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=2,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=5,reset-restore-cluster=False,force-updates=True
    test_backup_restore_sanity,items=1000,number_of_backups=10,reset-restore-cluster=False,force-updates=True
    #
    ##  backup restore with ephemeral bucket
    test_backup_restore_sanity,items=1000,bucket_type=ephemeral
    test_backup_restore_sanity,items=1000,number_of_backups=2,bucket_type=ephemeral
    test_backup_restore_sanity,items=1000,number_of_backups=5,bucket_type=ephemeral
    test_backup_restore_sanity,items=1000,number_of_backups=10,bucket_type=ephemeral
    #
    ## test backup and restore with non exist bucket
    test_restore_with_non_exist_bucket,items=1000,skip_buckets=True
    test_restore_with_non_exist_bucket,items=1000,skip_buckets=True,bucket_type=ephemeral
    #
    ## ops_type create and delete are to be added - need to clarify behaviour for parallel ops while taking backup
    test_backup_restore_with_ops,items=1000,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=2,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=5,force-updates=True
    test_backup_restore_with_ops,items=1000,number_of_backups=10,force-updates=True
    #
    ## backup with comression flag
    # compress data is set to default from 6.5 test_backup_with_compress_flag,items=20000,backup-compressed=True
    #
    ## test backup and restore with environment password
    test_backup_restore_with_password_env,items=1000,passwd-env=True
    #
    #backup while rebalance is going on - fresh cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False,force-updates=True
    #backup after rebalance is done - fresh cluster
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,skip_consistency=True,per_node=False,force-updates=True
    #backup while rebalance is going on - existing cluster
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_with_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    #backup after rebalance is done - existing cluster
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=0,nodes_out=1,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    test_backup_restore_after_rebalance,items=1000,nodes_init=2,nodes_in=1,nodes_out=0,same-cluster=True,skip_consistency=True,per_node=False,force-updates=True
    #backup and restore with expiration
    test_backup_restore_sanity,items=1000,expires=30
    #backup compact tests

    # Compaction for the Rift storage format is not supported in 7.0.0
    #test_backup_compact,items=1000
    test_restore_from_compacted_backup,items=1000
    #backup and restore on non master node
    test_backup_restore_sanity,items=1000,non-master=True,nodes_init=2
    #backup and restore with nodes reshuffling to different groups
    test_backup_restore_with_nodes_reshuffle,items=1000,nodes_init=2,same-cluster=True
    test_backup_restore_with_nodes_reshuffle,items=1000,nodes_init=2,same-cluster=True,replicas=0
    #backup and restore with firewall
#     test_backup_restore_with_firewall,items=1000,skip_buckets=True
    #backup and restore with audit - uncomment when MB19298 is fixed
    #test_backup_restore_with_audit,items=1000
    #backup and restore to a cluster with lesser number of nodes - nodes_init should be >= 3
    test_backup_restore_with_lesser_nodes,items=1000,nodes_init=3
    #backup and restore should skip memcached buckets
    test_backup_and_restore_with_map_buckets,items=1000
    #
    ## test restore with --map-buckets option
    test_backup_and_restore_with_map_buckets,default_bucket=False,items=10000,map-buckets=true
    test_backup_and_restore_with_map_buckets,items=10000,map-buckets=true
    test_backup_and_restore_with_map_buckets,default_bucket=False,sasl_buckets=3,items=10000,map-buckets=true,dgm_run=True
    #
    #backup and restore - crash scenarios
    test_backup_with_erlang_crash_and_restart,items=500000
    test_backup_with_couchbase_stop_and_start,items=300000
    test_backup_with_memcached_crash_and_restart,items=500000
    test_backup_with_erlang_crash,items=500000
    test_backup_with_couchbase_stop,items=500000
    test_backup_with_memcached_crash,items=500000
    test_restore_with_erlang_crash_and_restart,items=500000,skip_buckets=True
    test_restore_with_couchbase_stop_and_start,items=300000,skip_buckets=True
    test_restore_with_memcached_crash_and_restart,items=500000,skip_buckets=True
    test_restore_with_erlang_crash,items=500000,skip_buckets=True
    test_restore_with_couchbase_stop,items=500000,skip_buckets=True
    test_restore_with_memcached_crash,items=500000,skip_buckets=True,should-fail=True
    test_merge_with_crash,items=500000
    test_compact_with_crash,items=500000
    test_resume_restore
    #backup merge command scenarios
    test_backup_merge,items=1000,number_of_backups=5
    test_backup_merge_with_restore,items=1000
    test_backup_merge_with_unmerged,items=1000
    #backup purge and resume scenarios
    test_backup_resume,resume=True,items=500000
    #
    ## test merge backup
    test_merge_backup_from_old_and_new_bucket,items=20000,same-cluster=True,bucket_delete=True
    test_merge_backup_from_old_and_new_bucket,items=20000,same-cluster=True,bucket_flush=True
    test_merge_backup_with_multi_threads,multi_threads=True,threads_count=2,items=50000
    test_merge_backup_with_multi_threads,multi_threads=True,threads_count=4,items=50000
    test_merge_backup_with_partial_backup,items=100000,number_of_backups=2
    test_merge_backup_with_merge_kill_and_re_merge,items=100000,number_of_backups=2
    test_merge_backup_with_purge_deleted_keys,items=100000
    test_merge_backup_with_failover_logs,items=100000
    #
    ## backup and restore with deletes
    test_backup_restore_with_deletes,items=100000
    #
    ## backup restore with short options
    test_backupmgr_with_short_option,repo=r
    test_backupmgr_with_short_option,archive=a
    test_backupmgr_with_short_option,repo=r
    test_backupmgr_with_short_option,cluster=c
    test_backupmgr_with_short_option,bkusername=u
    test_backupmgr_with_short_option,bkpassword=p
    test_backupmgr_with_short_option,command=restore,repo=r
    test_backupmgr_with_short_option,command=restore,archive=a
    test_backupmgr_with_short_option,command=restore,repo=r
    test_backupmgr_with_short_option,command=restore,cluster=c
    test_backupmgr_with_short_option,command=restore,bkusername=u
    test_backupmgr_with_short_option,command=restore,bkpassword=p
    #
    ## test cbbackupmgr with -h
    test_backupmgr_help_display,display=-h
    test_backupmgr_help_display,display=-h,subcommand=backup
    test_backupmgr_help_display,display=-h,subcommand=restore
    test_backupmgr_help_display,display=-h,subcommand=config
    test_backupmgr_help_display,display=-h,subcommand=merge
    test_backupmgr_help_display,display=-h,subcommand=remove
    test_backupmgr_help_display,display=-h,subcommand=compact
    test_backupmgr_help_display,display=-h,subcommand=help
    #
    ## test cbbackupmgr with --help
    test_backupmgr_help_display,display=--help
    test_backupmgr_help_display,display=-h,subcommand=backup
    test_backupmgr_help_display,display=-h,subcommand=restore
    test_backupmgr_help_display,display=-h,subcommand=config
    test_backupmgr_help_display,display=-h,subcommand=merge
    test_backupmgr_help_display,display=-h,subcommand=remove
    test_backupmgr_help_display,display=-h,subcommand=compact
    test_backupmgr_help_display,display=-h,subcommand=help
    #
    #backup and restore with failover - nodes_init should be 2
    test_backup_restore_with_failover,items=1000,nodes_init=2,graceful=True,recoveryType=delta
    test_backup_restore_with_failover,items=1000,nodes_init=2,graceful=True
    test_backup_restore_with_failover,items=1000,nodes_init=2,recoveryType=delta
    test_backup_restore_with_failover,items=1000,nodes_init=2
    #backup and restore with python SDK - python SDK should be installed on all nodes
    test_backup_restore_with_python_sdk,items=1000
    test_backup_restore_with_python_sdk,lww=True,lww_new=True,items=1000
    test_backup_restore_with_python_sdk,lww=True,lww_new=False,disable-conf-res-restriction=True,items=1000
    test_backup_restore_with_python_sdk,lww=False,lww_new=True,disable-conf-res-restriction=True,items=1000
    test_backup_restore_with_python_sdk,force-updates=True,items=1000
    test_backup_restore_with_python_sdk,lww_new=True,force-updates=True,items=1000
    test_backup_restore_with_python_sdk,lww=True,lww_new=False,force-updates=True,items=1000
    test_backup_restore_with_python_sdk,lww=True,lww_new=True,force-updates=True,items=10000
    #backup and restore with bucket flush and recreate - should restore to same cluster
    test_backup_restore_with_flush,items=1000,same-cluster=True
    test_backup_restore_with_recreate,items=1000,same-cluster=True
    #backup commands required parameters negative input scenarios
    test_backup_create_negative_args
    test_backup_cluster_restore_negative_args
    test_backup_cluster_restore_negative_args,command="restore"
    test_backup_compact_negative_args
    test_backup_merge_negative_args
    test_backup_remove_negative_args
    #views and indexes scenarios
    test_backup_restore_with_views,items=1000
    test_backup_restore_with_gsi,items=1000
    test_backup_restore_with_fts,items=1000
    #xdcr scenarios
    test_backup_restore_with_xdcr,items=200000
    #warmup scenarios
    test_backup_restore_with_warmup,items=200000
    #dgm scenarios - uncomment after CBQE-3357 is fixed
    #test_backup_restore_with_dgm
    #large number of mutations
    test_backup_restore_with_ops,items=250000
    #backup and restore with cluster settings
    test_backup_restore_sanity,items=1000,enable-autofailover=True,autofailover-timeout=30
    test_backup_restore_with_auto_compaction,items=1000
    test_backup_restore_with_update_notifications,items=1000
    test_backup_restore_with_alerts,items=1000
    #misc scenarios - uncomment when MB-18724 is fixed
    # test_backup_restore_misc,items=1000
    #backup and restore with upgrade
    test_backup_restore_after_upgrade,items=1000,initial_version=3.1.3-1823,upgrade_version=4.5.0-1065
    test_backup_purge,purge=True,items=500000
