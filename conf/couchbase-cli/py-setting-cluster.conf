clitest.couchbase_clitest.CouchbaseCliTest:
    # Verify editing no settings succeeds
    testSettingCluster,username=Administrator,password=password,expect-error=False
    # Verify editing memory quota
    testSettingCluster,username=Administrator,password=password,data-ramsize=274,expect-error=False
    testSettingCluster,username=Administrator,password=password,index-ramsize=274,expect-error=False
    testSettingCluster,username=Administrator,password=password,fts-ramsize=274,expect-error=False
    testSettingCluster,username=Administrator,password=password,data-ramsize=274,index-ramsize=274,index-ramsize=274,expect-error=False
    # Verify changing the cluster port
    # skipped until https://issues.couchbase.com/browse/MB-60478 is fixed
    # testSettingCluster,username=Administrator,password=password,port=5000,expect-error=False
    # Verify changing the cluster username and password
    testSettingCluster,username=Administrator,password=password,new-username=new_admin,new_password=new_pass,expect-error=False
    testSettingCluster,username=Administrator,password=password,new-username=new_admin,expect-error=False
    testSettingCluster,username=Administrator,password=password,new_password=new_pass,expect-error=False
    # Verify with invalid memory quotas
    testSettingCluster,username=Administrator,password=password,data-ramsize=27z4,expect-error=True,error-msg=argument --cluster-ramsize: invalid int value: '27z4'
    testSettingCluster,username=Administrator,password=password,index-ramsize=27z4,expect-error=True,error-msg=argument --cluster-index-ramsize: invalid int value: '27z4'
    testSettingCluster,username=Administrator,password=password,fts-ramsize=27z4,expect-error=True,error-msg=argument --cluster-fts-ramsize: invalid int value: '27z4'
    # Verify that a password that is longer than 24 characters
    testSettingCluster,username=Administrator,password=password,new-username=new_user,new-password=password_that_is_too_long,data-ramsize=256,expect-error=False
    # Verify that changing the cluster name works
    testSettingCluster,username=Administrator,password=password,name=mycluster,expect-error=False
    testSettingCluster,username=Administrator,password=password,name=empty,expect-error=True,error-msg=argument --cluster-name: expected one argument
    testSettingCluster,username=Administrator,password=password,name="my cluster",expect-error=False
    # Verify that a password that is too short fails
    testSettingCluster,username=Administrator,password=password,new-username=new_user,new-password=short,data-ramsize=256,expect-error=True,error-msg=The password must be at least 6 characters long.
    # Verify that invalid username and password fail
    testSettingCluster,username=myusername,password=mypassword,data-ramsize=256,expect-error=True,error-msg=unable to access the REST API - please check your username (-u) and password (-p)
    # Verify that an invalid port fails
    testSettingCluster,username=Administrator,password=password,port=99999,expect-error=True,error-msg=The port number must be greater than 1023 and less than 65536.
    testSettingCluster,username=Administrator,password=password,port=100,expect-error=True,error-msg=The port number must be greater than 1023 and less than 65536.
    testSettingCluster,username=Administrator,password=password,port=34z,expect-error=True,error-msg=argument --cluster-port: invalid int value: '34z'
    # Verify that running against an uninitialized cluster fails
    testSettingCluster,username=Administrator,password=password,data-ramsize=290,initialized=False,expect-error=True,error-msg=Cluster is not initialized, use cluster-init to initialize the cluster
