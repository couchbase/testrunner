fts.moving_topology_fts.MovingTopFTS:

    #### 1. Change in topology during index building ####

    # Rebalance during index building
    rebalance_in_during_index_building,items=100000,cluster=D,F,GROUP=P0
    rebalance_in_during_index_building,items=50000,cluster=D,F,standard_buckets=2,GROUP=P0;MULTIPLE_CA
    rebalance_out_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    rebalance_out_during_index_building,items=30000,cluster=D,F,F,index_replicas=1,GROUP=P0;MULTIPLE_CA

    rebalance_out_master_during_index_building,items=30000,cluster=D,D+F,F,index_replicas=1,GROUP=P0;MULTIPLE_CA
    swap_rebalance_during_index_building,items=1000,cluster=D,F,F,replicas=0,GROUP=P0;MULTIPLE_CA;MAGMA
    swap_rebalance_during_index_building,items=30000,cluster=D,F,replicas=0,GROUP=P0
    swap_rebalance_kv_during_index_building,items=30000,cluster=D,F,replicas=0,GROUP=P0

    # retry rebalance tests while index building

    retry_rebalance_in_during_index_building,items=100000,cluster=D,F,GROUP=P1,retry_time=60,num_retries=1
    retry_rebalance_out_during_index_building,items=100000,cluster=D,F,F,GROUP=P1;MULTIPLE_CA,retry_time=60,num_retries=1
    retry_swap_rebalance_during_index_building,items=100000,cluster=D,F,replicas=0,GROUP=P1,retry_time=60,num_retries=1

    # Failover during index building
    failover_non_master_during_index_building,items=30000,cluster=D,F,F,index_replicas=1,GROUP=P0;MULTIPLE_CA
    failover_non_master_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    failover_no_rebalance_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    failover_non_master_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    failover_master_during_index_building,items=30000,cluster=D,D+F,GROUP=P0
    failover_only_kv_during_index_building,items=30000,cluster=D,F,GROUP=P0;MAGMA
    graceful_failover_and_delta_recovery_during_index_building,items=30000,cluster=D,D+F,GROUP=P0;MULTIPLE_CA
    graceful_failover_and_full_recovery_during_index_building,items=30000,cluster=D,D+F,GROUP=P0;MULTIPLE_CA
    hard_failover_and_delta_recovery_during_index_building,items=30000,cluster=D,D+F,GROUP=P0
    hard_failover_and_full_recovery_during_index_building,items=30000,cluster=D,D+F,GROUP=P0

    # node crash/reboot during index building
    warmup_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    warmup_during_index_building,items=30000,cluster=D,F,GROUP=P0
    warmup_master_during_index_building,items=30000,cluster=D,F,GROUP=P0
    node_reboot_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    node_reboot_only_kv_during_index_building,items=30000,cluster=D,F,F,GROUP=P0;MULTIPLE_CA;MAGMA
    memc_crash_on_kv_during_index_building,items=30000,cluster=D,F,F,GROUP=P0
    fts_node_crash_during_index_building,items=30000,cluster=D,F,F,GROUP=P0;MULTIPLE_CA;MAGMA
    erl_crash_on_kv_during_index_building,items=30000,cluster=D,F,F,GROUP=P0;MULTIPLE_CA


    ### 2. Change in topology between indexing and querying ####

    # Rebalance between indexing and querying
    rebalance_in_between_indexing_and_querying,items=30000,cluster=D,F,D+F,GROUP=P0
    #rebalance_in_between_indexing_and_querying,items=30000,cluster=D,F,D+F,sasl_buckets=1,GROUP=P0
    rebalance_out_between_indexing_and_querying,items=30000,cluster=D,F,D+F,F,num_rebalance=2,GROUP=P0;MULTIPLE_CA
    rebalance_out_between_indexing_and_querying,items=30000,cluster=D,F,F,GROUP=P0
    rebalance_out_between_indexing_and_querying,items=30000,cluster=D,F,F,standard_buckets=3,GROUP=P0
    rebalance_out_between_indexing_and_querying,items=30000,cluster=D,F,F,D+F,index_replicas=1,num_rebalance=2,GROUP=P0;MULTIPLE_CA
    swap_rebalance_between_indexing_and_querying,items=30000,cluster=D,F,replicas=0,GROUP=P0
    swap_rebalance_between_indexing_and_querying,items=30000,cluster=D,F,F,replicas=0,GROUP=P0,num_rebalance=2

    hard_failover_and_remove_between_indexing_and_querying,items=30000,cluster=D,F,F,GROUP=P0
    hard_failover_no_rebalance_between_indexing_and_querying,items=10000,cluster=D,F,F,GROUP=P0
    failover_no_rebalance_with_replicas_between_indexing_and_querying,items=20000,index_replicas=1,cluster=D,F,D+F,compare_es=True,num_queries=20,GROUP=P1
    failover_no_rebalance_with_replicas_between_indexing_and_querying,items=20000,index_replicas=1,cluster=D,F,D+F,compare_es=True,graceful=True,num_queries=20,GROUP=P1
    hard_failover_master_between_indexing_and_querying,items=10000,cluster=D,D+F,F,GROUP=P0
    hard_failover_and_delta_recovery_between_indexing_and_querying,items=10000,cluster=D,D+F,D+F,GROUP=P0
    hard_failover_and_full_recovery_between_indexing_and_querying,items=10000,cluster=D,D+F,D+F,GROUP=P0
    graceful_failover_and_full_recovery_between_indexing_and_querying,items=10000,cluster=D,D+F,D+F,GROUP=P0
    graceful_failover_and_delta_recovery_between_indexing_and_querying,items=10000,cluster=D,D+F,D+F,GROUP=P0

    # Node crash/reboot scenarios
    warmup_between_indexing_and_querying,items=30000,cluster=D,F,GROUP=P0
    warmup_master_between_indexing_and_querying,items=30000,cluster=D,F,GROUP=P0
    node_reboot_between_indexing_and_querying,items=30000,cluster=D,F,GROUP=P0
    fts_node_crash_between_indexing_and_querying,items=30000,cluster=D,F,F,GROUP=P0
    erl_crash_between_indexing_and_querying,items=30000,cluster=D,D+F,D+F,GROUP=P0

    ### 3. Change in topology during querying ###

    rebalance_in_during_querying,items=10000,cluster=D,D+F,num_queries=100,GROUP=P1
    rebalance_in_during_querying,items=10000,cluster=D,D+F,num_queries=100,num_rebalance=2,GROUP=P1
    rebalance_out_during_querying,items=10000,cluster=D,D+F,F,num_queries=100,compare_es=True,num_queries=100,GROUP=P1
    rebalance_out_during_querying,items=10000,cluster=D,D+F,F,F,num_queries=100,num_rebalance=2,GROUP=P1
    swap_rebalance_during_querying,items=10000,cluster=D,F,replicas=0,num_queries=100,compare_es=True,num_queries=100,GROUP=P1

    # retry rebalance tests while querying

    retry_rebalance_in_during_querying,items=1000,cluster=D,F,num_queries=50,GROUP=P1,retry_time=60,num_retries=1
    retry_rebalance_out_during_querying,items=1000,cluster=D,F,F,num_queries=100,GROUP=P1,retry_time=30,num_retries=2

    hard_failover_no_rebalance_during_querying,items=1000,cluster=D,F,F,GROUP=P1,index_replicas=1
    hard_failover_rebalance_out_during_querying,items=10000,cluster=D,F,F,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,F,F,num_queries=20,graceful=False,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=True,cluster=D,F,F,num_queries=20,graceful=False,index_replicas=1,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,D+F,D+F,num_queries=20,recovery=delta,graceful=False,GROUP=P1;MULTIPLE_CA
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,F,F,num_queries=20,recovery=full,graceful=False,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,F,D+F,num_queries=20,graceful=True,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,F,D+F,num_queries=20,graceful=True,index_replicas=1,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,D+F,D+F,num_queries=20,recovery=delta,graceful=True,GROUP=P1
    failover_and_addback_during_querying,items=10000,compare_es=False,cluster=D,F,D+F,num_queries=20,recovery=full,graceful=True,GROUP=P1

    fts_node_down_with_replicas_during_querying,items=10000,cluster=D,D+F,D+F,num_queries=10,index_replicas=1,compare_es=True,GROUP=P1
    warmup_master_during_querying,items=10000,cluster=D,D+F,D+F,num_queries=10,compare_es=True,GROUP=P1
    node_reboot_during_querying,items=10000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P1
    memc_crash_during_indexing_and_querying,items=10000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P1
    erl_crash_during_querying,items=10000,cluster=D,D+F,D+F,compare_es=False,num_queries=20,GROUP=P1
    fts_crash_during_querying,items=10000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P1

    # moving to bottom temporarily to avoid subsequent failures
    rebalance_out_during_index_building,items=30000,cluster=D,F,F,index_replicas=1,standard_buckets=4,GROUP=P1

    # change index definition in the middle of topology change
    update_index_during_rebalance,items=200000,GROUP=P1;MULTIPLE_CA;MAGMA
    delete_index_during_rebalance,items=200000,GROUP=P1;MULTIPLE_CA
    delete_buckets_during_rebalance,items=20000,GROUP=P1;MULTIPLE_CA
    #MB-46302
    #update_index_during_failover,items=100000,cluster=D:D+F:D+F,GROUP=P1
    #update_index_during_failover,items=100000,cluster=D:D+F:F,GROUP=P1
    update_index_during_failover,items=100000,cluster=D:D+F:D+F,index_replicas=1,GROUP=P1;MULTIPLE_CA
    update_index_during_failover_and_rebalance,items=100000,cluster=D:D+F:F,GROUP=P1;MULTIPLE_CA

    # Partial rollback tests
    partial_rollback,cluster=D,D,F,items=50000,update=True,upd=30,upd_del_fields=['dept'],GROUP=P1
    partial_rollback,cluster=D,D,F,items=50000,delete=True,del=10,GROUP=P1
    partial_rollback,cluster=D,D,F,F,index_replicas=1,items=50000,update=True,upd=30,upd_del_fields=['dept'],GROUP=P1;MULTIPLE_CA
    partial_rollback,cluster=D,D,F,F,index_replicas=1,items=30000,update=True,upd=30,upd_del_fields=['dept'],failover_fts_node=True,GROUP=P1;MULTIPLE_CA

    test_cancel_node_removal_rebalance,cluster=D,F,F,GROUP=P0;MULTIPLE_CA,items=30000,compare_es=True,num_partitions=30
    test_stop_restart_rebalance_in_loop,cluster=D,F,F,GROUP=P0,items=30000,compare_es=True,num_partitions=30
    test_rebalance_cancel_new_rebalance,cluster=D,D+F,D+F,F,items=50000,GROUP=P0;MULTIPLE_CA

    #MB-46302
    #update_index_during_failover,items=100000,cluster=D:D+F:D+F,GROUP=P1,index_partitions=20

    #swap_rebalance_parallel_partitions_move,items=500000,cluster=D,F,F,replicas=0,GROUP=PARALLEL_PART_MV,maxConcurrentPartitionMovesPerNode=3,num_partitions=6
    rebalance_in_parallel_partitions_move_add_node,items=500000,cluster=D,F,GROUP=PARALLEL_PART_MV,maxConcurrentPartitionMovesPerNode=3,num_partitions=6
    #test is commented since it is unstable
    #failover_non_master_parallel_partitions_move,items=500000,cluster=D,F,F,index_replicas=1,GROUP=PARALLEL_PART_MV,maxConcurrentPartitionMovesPerNode=6,num_partitions=20
    rebalance_out_parallel_partitions_move,items=500000,cluster=D,F,F,GROUP=PARALLEL_PART_MV,maxConcurrentPartitionMovesPerNode=3,num_partitions=6


    rebalance_2_nodes_during_index_building,items=30000,cluster=D,F,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_out=True
    rebalance_during_kv_mutations,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0;MULTIPLE_CA,num_partitions=20,compare_es=True,fts_quota=990,update=True,upd=30,upd_del_fields=['dept'],rebalance_out=True
    #commenting as killing fts on existing node during rebalance out will fail the rebalance
    #rebalance_kill_fts_existing_fts_node,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_out=True
    rebalance_2_nodes_during_index_building,items=30000,cluster=D,F,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_in=True
    rebalance_during_kv_mutations,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,update=True,upd=30,upd_del_fields=['dept'],rebalance_in=True
    rebalance_kill_fts_existing_fts_node,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_in=True

