fts.moving_topology_fts.MovingTopFTS:

    #### 1. Change in topology during index building ####

    # Rebalance during index building
    rebalance_in_during_index_building,items=30000,cluster=D,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    rebalance_in_during_index_building,items=15000,cluster=D,F,standard_buckets=2,GROUP=P1,collection=["collection1","collection2","collection3"]
    rebalance_out_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    rebalance_out_during_index_building,items=10000,cluster=D,F,F,index_replicas=1,GROUP=P1,collection=["collection1","collection2","collection3"]

    rebalance_out_master_during_index_building,items=10000,cluster=D,D+F,F,index_replicas=1,GROUP=P0,collection=["collection1","collection2","collection3"]
    swap_rebalance_during_index_building,items=1000,cluster=D,F,F,replicas=0,GROUP=P0,collection=["collection1","collection2","collection3"]
    swap_rebalance_during_index_building,items=10000,cluster=D,F,replicas=0,GROUP=P1,collection=["collection1","collection2","collection3"]
    swap_rebalance_kv_during_index_building,items=10000,cluster=D,F,replicas=0,GROUP=P1,collection=["collection1","collection2","collection3"]

    # retry rebalance tests while index building

    retry_swap_rebalance_during_index_building,items=30000,cluster=D,F,replicas=0,GROUP=P1,retry_time=60,num_retries=1,collection=["collection1","collection2","collection3"]

    # Failover during index building
    failover_non_master_during_index_building,items=10000,cluster=D,F,F,index_replicas=1,GROUP=P0,collection=["collection1","collection2","collection3"]
    failover_non_master_during_index_building,items=10000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_no_rebalance_during_index_building,items=10000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_non_master_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    failover_master_during_index_building,items=10000,cluster=D,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_only_kv_during_index_building,items=10000,cluster=D,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    graceful_failover_and_delta_recovery_during_index_building,items=10000,cluster=D,D+F,GROUP=P0,collection=["collection1","collection2","collection3"]
    graceful_failover_and_full_recovery_during_index_building,items=10000,cluster=D,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    hard_failover_and_delta_recovery_during_index_building,items=10000,cluster=D,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    hard_failover_and_full_recovery_during_index_building,items=10000,cluster=D,D+F,GROUP=P0,collection=["collection1","collection2","collection3"]

    # node crash/reboot during index building
    warmup_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    warmup_during_index_building,items=10000,cluster=D,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    warmup_master_during_index_building,items=10000,cluster=D,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    node_reboot_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    node_reboot_only_kv_during_index_building,items=10000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    memc_crash_on_kv_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    fts_node_crash_during_index_building,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    erl_crash_on_kv_during_index_building,items=10000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]


    ### 2. Change in topology between indexing and querying ####

    # Rebalance between indexing and querying
    rebalance_in_between_indexing_and_querying,items=10000,cluster=D,F,D+F,GROUP=P0,collection=["collection1","collection2","collection3"]
    #rebalance_in_between_indexing_and_querying,items=10000,cluster=D,F,D+F,sasl_buckets=1,GROUP=P1,collection=["collection1","collection2","collection3"]
    rebalance_out_between_indexing_and_querying,items=10000,cluster=D,F,D+F,F,num_rebalance=2,GROUP=P0,collection=["collection1","collection2","collection3"]
    rebalance_out_between_indexing_and_querying,items=10000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    rebalance_out_between_indexing_and_querying,items=10000,cluster=D,F,F,standard_buckets=3,GROUP=P1,collection=["collection1","collection2","collection3"]
    rebalance_out_between_indexing_and_querying,items=10000,cluster=D,F,F,D+F,index_replicas=1,num_rebalance=2,GROUP=P1,collection=["collection1","collection2","collection3"]
    swap_rebalance_between_indexing_and_querying,items=10000,cluster=D,F,replicas=0,GROUP=P0,collection=["collection1","collection2","collection3"]
    swap_rebalance_between_indexing_and_querying,items=10000,cluster=D,F,F,replicas=0,GROUP=P1,num_rebalance=2,collection=["collection1","collection2","collection3"]

    hard_failover_and_remove_between_indexing_and_querying,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    hard_failover_no_rebalance_between_indexing_and_querying,items=3000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    hard_failover_master_between_indexing_and_querying,items=3000,cluster=D,D+F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    hard_failover_and_delta_recovery_between_indexing_and_querying,items=3000,cluster=D,D+F,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    hard_failover_and_full_recovery_between_indexing_and_querying,items=3000,cluster=D,D+F,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    graceful_failover_and_full_recovery_between_indexing_and_querying,items=3000,cluster=D,D+F,D+F,GROUP=P0,collection=["collection1","collection2","collection3"]
    graceful_failover_and_delta_recovery_between_indexing_and_querying,items=3000,cluster=D,D+F,D+F,GROUP=P1,collection=["collection1","collection2","collection3"]

    # Node crash/reboot scenarios
    warmup_between_indexing_and_querying,items=10000,cluster=D,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    warmup_master_between_indexing_and_querying,items=10000,cluster=D,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    node_reboot_between_indexing_and_querying,items=10000,cluster=D,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    fts_node_crash_between_indexing_and_querying,items=10000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]

    ### 3. Change in topology during querying ###

    rebalance_in_during_querying,items=3000,cluster=D,D+F,num_queries=100,GROUP=P0,collection=["collection1","collection2","collection3"]
    rebalance_in_during_querying,items=3000,cluster=D,D+F,num_queries=100,num_rebalance=2,GROUP=P1,collection=["collection1","collection2","collection3"]
    rebalance_out_during_querying,items=3000,cluster=D,D+F,F,num_queries=100,compare_es=True,num_queries=100,GROUP=DEV,collection=["collection1","collection2","collection3"],index_replicas=1
    rebalance_out_during_querying,items=3000,cluster=D,D+F,F,F,num_queries=100,num_rebalance=2,GROUP=P1,collection=["collection1","collection2","collection3"],index_replicas=1

    # retry rebalance tests while querying

    retry_rebalance_in_during_querying,items=30000,cluster=D,F,num_queries=50,GROUP=P1,retry_time=60,num_retries=1,collection=["collection1","collection2","collection3"]
    retry_rebalance_out_during_querying,items=30000,cluster=D,F,F,num_queries=100,GROUP=P1,retry_time=30,num_retries=2,collection=["collection1","collection2","collection3"],index_replicas=1

    hard_failover_no_rebalance_during_querying,items=3000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"],index_replicas=1
    hard_failover_rebalance_out_during_querying,items=3000,cluster=D,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,F,F,num_queries=20,graceful=False,GROUP=P0,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=True,cluster=D,F,F,num_queries=20,graceful=False,index_replicas=1,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,D+F,D+F,num_queries=20,recovery=delta,graceful=False,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,F,F,num_queries=20,recovery=full,graceful=False,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,F,D+F,num_queries=20,graceful=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,F,D+F,num_queries=20,graceful=True,index_replicas=1,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,D+F,D+F,num_queries=20,recovery=delta,graceful=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    failover_and_addback_during_querying,items=3000,compare_es=False,cluster=D,F,D+F,num_queries=20,recovery=full,graceful=True,GROUP=P1,collection=["collection1","collection2","collection3"]

    node_reboot_during_querying,items=3000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P0,collection=["collection1","collection2","collection3"]
    memc_crash_during_indexing_and_querying,items=3000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P1,collection=["collection1","collection2","collection3"]
    fts_crash_during_querying,items=3000,cluster=D,F,F,compare_es=False,num_queries=20,GROUP=P0,collection=["collection1","collection2","collection3"]

    # moving to bottom temporarily to avoid subsequent failures
    rebalance_out_during_index_building,items=10000,cluster=D,F,F,index_replicas=1,standard_buckets=4,GROUP=P1,collection=["collection1","collection2","collection3"]

    # change index definition in the middle of topology change
    delete_index_during_rebalance,items=60000,GROUP=P0,collection=["collection1","collection2","collection3"]
    delete_buckets_during_rebalance,items=6000,GROUP=DEV1,collection=["collection1","collection2","collection3"]


    test_cancel_node_removal_rebalance,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_stop_restart_rebalance_in_loop,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_rebalance_cancel_new_rebalance,cluster=D,D+F,D+F,F,items=15000,GROUP=P0,collection=["collection1","collection2","collection3"]


    rebalance_2_nodes_during_index_building,items=30000,cluster=D,F,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_out=True,collection=["collection1","collection2","collection3"]
    rebalance_during_kv_mutations,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,update=True,upd=30,upd_del_fields=['dept'],rebalance_out=True,collection=["collection1","collection2","collection3"]
    rebalance_kill_fts_existing_fts_node,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_out=True,collection=["collection1","collection2","collection3"]
    rebalance_2_nodes_during_index_building,items=30000,cluster=D,F,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_in=True,collection=["collection1","collection2","collection3"]
    rebalance_during_kv_mutations,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,update=True,upd=30,upd_del_fields=['dept'],rebalance_in=True,collection=["collection1","collection2","collection3"]
    rebalance_kill_fts_existing_fts_node,items=60000,cluster=D,F,F,index_replicas=1,GROUP=P0,num_partitions=20,compare_es=True,fts_quota=990,rebalance_in=True,collection=["collection1","collection2","collection3"]