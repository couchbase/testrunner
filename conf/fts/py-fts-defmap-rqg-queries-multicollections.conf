fts.stable_topology_fts.StableTopFTS:

    # match
    test_query_type,items=1000,num_queries=10,query_types=match,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=match,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=match,cluster=D,F,F,compare_es=True,update=True,delete=True,GROUP=P0,collection=["collection1","collection2","collection3"],scoring_model=bm25

    # numeric-range
    test_query_type,items=1000,num_queries=10,query_types=numeric_range,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=numeric_range,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=1000,num_queries=100,query_types=numeric_range,cluster=D,F,F,compare_es=True,update=True,delete=True,GROUP=P0,collection=["collection1","collection2","collection3"]

    # date-range
    test_query_type,items=1000,num_queries=10,query_types=date_range,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=date_range,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,dataset=wiki,query_types=date_range,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,dataset=wiki,query_types=date_range,cluster=D,F,F,compare_es=True,update=True,delete=True,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25

    # term-range
    test_query_type,items=1000,num_queries=100,query_types=term_range,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,dataset=wiki,query_types=term_range,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25

    # match_phrase
    test_query_type,items=1000,num_queries=10,query_types=match_phrase,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=match_phrase,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P0,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=1000,num_queries=100,query_types=match_phrase,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    #todo: fix update/delete es for dataset=all for multicollections
    #test_query_type,items=100,num_queries=100,query_types=match_phrase,cluster=D,F,F,compare_es=True,dataset=all,update=True,delete=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=match_phrase,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"]

    # prefix
    test_query_type,items=1000,num_queries=10,query_types=prefix,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=prefix,cluster=D,F,F,compare_es=True,dataset=wiki,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=1000,num_queries=100,query_types=prefix,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]

    # disjunction
    test_query_type,items=1000,num_queries=10,query_types=disjunction,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=disjunction,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=1000,num_queries=100,query_types=disjunction,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]

    # conjunction
    test_query_type,items=1000,num_queries=10,query_types=conjunction,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=conjunction,cluster=D,F,F,compare_es=True,dataset=wiki,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=1000,num_queries=100,query_types=conjunction,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]

    # bool
    test_query_type,items=1000,num_queries=10,query_types=bool,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=bool,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=bool,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25

    # query_string_query
    test_query_type,items=1000,num_queries=10,query_types=query_string,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=1000,num_queries=100,query_types=query_string,cluster=D,F,F,compare_es=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=query_string,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    #todo: fix update/delete es for dataset=all for multicollections
    #test_query_type,items=100,num_queries=100,query_types=query_string,cluster=D,F,F,compare_es=True,dataset=all,delete=True,GROUP=P1,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=query_string,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"]

    # wildcard_query
    test_query_type,items=1000,num_queries=100,query_types=wildcard,cluster=D,F,F,compare_es=True,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=100,num_queries=100,query_types=wildcard,cluster=D,F,F,compare_es=True,dataset=wiki,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=100,num_queries=100,query_types=wildcard,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"]

    # regexp_query
    test_query_type,items=100,num_queries=15,query_types=wildcard,cluster=D,F,F,compare_es=True,dataset=wiki,GROUP=P1,collection=["collection1","collection2","collection3"],scoring_model=bm25
    test_query_type,items=100,num_queries=30,query_types=wildcard,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"]

    # fuzzy_query
    # test_query_type,items=100,num_queries=100,query_types=fuzzy,cluster=D,F,F,compare_es=True,dataset=all,GROUP=P1,collection=["collection1","collection2","collection3"]

