fts.stable_topology_fts.StableTopFTS:

    # service start/run
    check_fts_service_started,no_buckets=True,GROUP=PS,collection=["collection1","collection2","collection3"]
    #check_fts_service_started,default_bucket=False,sasl_buckets=1,GROUP=PS,collection=["collection1","collection2","collection3"]

    # simple index creation
    create_simple_default_index,items=10,cluster=D,F,F,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=10000,cluster=D+F,F,D,GROUP=P0,collection=["collection1","collection2","collection3"]

    # updates, expiry,delete
    create_simple_default_index,items=10000,update=True,upd_del_fields=['is_manager','dept','manages.team_size'],GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=10000,update=True,expires=30,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=10000,delete=True,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=10000,update=True,delete=True,GROUP=P0,collection=["collection1","collection2","collection3"]

    # index creation on sasl bucket and standard_bucket
    #create_simple_default_index,items=10000,cluster=D,F,D+F,default_bucket=False,sasl_buckets=1,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=10000,cluster=D,F,F,default_bucket=False,standard_buckets=1,GROUP=PS,collection=["collection1","collection2","collection3"]

    # parallel index building (more than one bucket)
    create_simple_default_index,items=1000,cluster=D,F,F,standard_buckets=2,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=3000,cluster=D,F,F,standard_buckets=6,GROUP=P0,collection=["collection1","collection2","collection3"]

    # parallel index building (more than one index per bucket, multiple buckets)
    create_simple_default_index,items=1000,cluster=D,F,F,standard_buckets=2,index_per_bucket=2,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=1000,cluster=D,F,F,standard_buckets=6,index_per_bucket=2,GROUP=P0,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=1000,cluster=D,F,F,standard_buckets=6,index_per_bucket=2,update=True,expires=30,max_partitions_pindex=128,GROUP=P0,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=1000,cluster=D,F,D+F,F,standard_buckets=2,index_per_bucket=2,upd_del_fields=['is_manager','dept','manages.team_size'],GROUP=P0,collection=["collection1","collection2","collection3"]

    # configure plan params
    create_simple_default_index,items=20000,index_replicas=1,cluster=D+F,F,F,GROUP=PS,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=20000,index_replicas=2,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=20000,index_replicas=1,max_partitions_pindex=1024,cluster=D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=20000,index_replicas=1,max_partitions_pindex=1,GROUP=P1,collection=["collection1","collection2","collection3"]
    create_simple_default_index,items=20000,index_replicas=1,max_partitions_pindex=0,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]

    # delete bucket
    drop_bucket_check_index,items=100,GROUP=PS,collection=["collection1","collection2","collection3"]

    # test XAttrs and ssl support
    test_xattr_support,GROUP=P0,collection=["collection1","collection2","collection3"]

    # alias
    create_simple_alias,items=20000,GROUP=P0,collection=["collection1","collection2","collection3"]

    delete_index_then_query,items=30000,cluster=D,F,F,GROUP=P0,collection=["collection1","collection2","collection3"]
    delete_index_having_alias,items=20000,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    delete_index_having_alias_recreate_index_query,items=20000,cluster=D+F,GROUP=P1,collection=["collection1","collection2","collection3"]
    create_alias_on_deleted_index,items=5000,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]

    index_wiki,items=10000,analyzer=simple,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    index_wiki,items=10000,analyzer=keyword,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    index_wiki,items=20000,lang=ES,analyzer=es,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    index_wiki,items=20000,lang=DE,analyzer=de,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]
    index_wiki,items=20000,lang=FR,analyzer=fr,cluster=D+F,F,F,GROUP=P1,collection=["collection1","collection2","collection3"]

    # Simple queries
    run_default_index_query,items=100,GROUP=PS,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,query="""{"match": "safiya@mcdiabetes.com", "field": "email"}""",expected_hits=3000,GROUP=PS,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,query="""{"terms": ["Darcei", "Safiya"], "field":"manages.reports"}""",expected_hits=0,GROUP=P0,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,query="""{"match_phrase": "Darcei gel", "field": "manages.reports"}""",expected_hits=0,GROUP=P0,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,delete=True,del=100,query="""{"min": 0,"max": 1,"field":"mutated","inclusive_max": true}""",expected_hits=0,GROUP=P0,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=10000,cluster=D,F,standard_buckets=2,index_per_bucket=2,GROUP=P0,collection=["collection1","collection2","collection3"]

    #positive testcases for size param
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=10,query_limit_matches=4,expected_no_of_results=10,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_limit_matches=4,expected_no_of_results=4,query_max_matches=None,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=8,expected_no_of_results=8,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,expected_no_of_results=10,query_max_matches=None,collection=["collection1","collection2","collection3"]

    #negative testcases for size param
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=-1,query_limit_matches=4,expected_no_of_results=10,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=0,query_limit_matches=4,expected_no_of_results=0,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=20,query_limit_matches=-1,expected_no_of_results=20,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_limit_matches=-5,expected_no_of_results=10,query_max_matches=None,collection=["collection1","collection2","collection3"]
    run_default_index_query,items=1000,update=True,upd=100,query="""{"min": 1, "max":1, "field": "mutated", "inclusive_min": true, "inclusive_max": true}""",expected_hits=3000,GROUP=P0,query_max_matches=-5,expected_no_of_results=10,collection=["collection1","collection2","collection3"]

    # Test different types of queries
    # ["match", "phrase", "bool", "match_phrase","prefix", "fuzzy", "conjunction", "disjunction"
    #  "wildcard", "regexp", "query_string", "numeric_range", "date_range", "match_all","match_none"]
    test_query_type,items=10000,num_queries=2,query_type=match,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=phrase,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=match_phrase,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=conjunction,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=disjunction,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=prefix,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=bool,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=date_range,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=2,query_type=numeric_range,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_query_type,items=10000,num_queries=30,query_type=match,prefix,phrase,bool,GROUP=PS,collection=["collection1","collection2","collection3"]
    test_match_all,items=10000,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_none,items=10000,GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_consistency,update=True,consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"1": 8}}""",GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_consistency,update=True,upd_del_fields=['is_manager','dept','manages.team_size'],consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"13": 10}}""",GROUP=P0,collection=["collection1","collection2","collection3"]

    # commenting test_match_consistency_error till we know the use case
    test_match_consistency_long_timeout,update=True,consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"1": 25}}""",GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_consistency_long_timeout,update=True,timeout=60000,consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"1": 25}}""",GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_consistency_long_timeout,update=True,timeout=0,consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"1": 25}}""",GROUP=P0,collection=["collection1","collection2","collection3"]
    test_match_consistency_long_timeout,update=True,timeout=200000,consistency_level=at_plus,consistency_vectors="""{"default_index_1": {"1": 25}}""",GROUP=P0,collection=["collection1","collection2","collection3"]

    # edit-index
    edit_index_new_name,GROUP=P0,collection=["collection1","collection2","collection3"]
    edit_index,GROUP=P0,collection=["collection1","collection2","collection3"]
    edit_index_negative,GROUP=P0,collection=["collection1","collection2","collection3"]
