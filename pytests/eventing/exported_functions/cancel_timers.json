{
	"appcode": "function OnUpdate(doc, meta) {\n    var expiry = new Date();\n    expiry.setSeconds(expiry.getSeconds() + 3000);\n    var context = {docID : meta.id, random_text : \"e6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh07Aumoe6cZZGHuh07Aumoe6cZZGHuh07Aumoe6\"};\n    var is_created=createTimer(timerCallback,  expiry, meta.id, context);\n    if(is_created){\n    log(\"create timer for:\",meta.id);\n    dst_bucket[meta.id]=\"timer created\";\n    }\n}\nfunction OnDelete(meta) {\n    var expiry = new Date();\n    expiry.setSeconds(expiry.getSeconds() + 3000);\n    var context = {docID : meta.id};\n    var cancelled=cancelTimer(timerCallback,meta.id);\n    log(\"is timer cancelled:\",cancelled);\n    if(cancelled){\n        delete dst_bucket[meta.id];\n    }\n}\nfunction NDtimerCallback(context) {\n    log(\"firing delete timer:\",context.docID);\n}\n\nfunction timerCallback(context) {\n    log(\"firing update timer:\",context.docID);\n}\n",
	"depcfg": {
		"buckets": [
			{
				"alias": "dst_bucket",
				"bucket_name": "dst_bucket1",
				"access": "rw"
			}
		],
		"curl": [],
		"metadata_bucket": "metadata",
		"source_bucket": "src_bucket"
	},
	"version": "evt-6.6.0-7909-ee",
	"appname": "cancel_timer",
	"settings": {
		"dcp_stream_boundary": "from_now",
		"deadline_timeout": 62,
		"deployment_status": false,
		"execution_timeout": 60,
		"language_compatibility": "6.5.0",
		"log_level": "INFO",
		"processing_status": false
	}
}