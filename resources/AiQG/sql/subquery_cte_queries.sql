WITH HotelReviews AS (SELECT h.hotel_id, h.name, COUNT(r.review_id) AS review_count FROM hotel h JOIN (SELECT hotel_id FROM reviews) r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_id, h.name) SELECT * FROM HotelReviews WHERE review_count > 10;
WITH PopularHotels AS (SELECT h.hotel_id, AVG(r.ratings.Overall) AS avg_overall_rating FROM hotel h JOIN (SELECT hotel_id, ratings FROM reviews) r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_id HAVING AVG(r.ratings.Overall) > 4.0) SELECT h.name, p.avg_overall_rating FROM hotel h JOIN PopularHotels p ON h.hotel_id = p.hotel_id;
WITH UserBookings AS (SELECT u.user_id, u.name, COUNT(b.booking_id) AS total_bookings FROM users u JOIN (SELECT user_id FROM bookings WHERE payment_status = 'Paid') b ON u.user_id = b.user_id GROUP BY u.user_id, u.name) SELECT u.name, ub.total_bookings FROM users u JOIN UserBookings ub ON u.user_id = ub.user_id WHERE ub.total_bookings > 5;
WITH AverageRoomPrice AS (SELECT h.hotel_id, AVG(rt.price) AS avg_price FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id) SELECT h.name, a.avg_price FROM hotel h JOIN AverageRoomPrice a ON h.hotel_id = a.hotel_id WHERE a.avg_price > 120;
WITH FreeAmenitiesHotels AS (SELECT hotel_id, name, amenities FROM hotel WHERE free_parking = TRUE AND free_wifi = TRUE) SELECT * FROM FreeAmenitiesHotels;
WITH CityTopRatedHotels AS (SELECT h.city, h.name, h.rating FROM hotel h WHERE h.rating >= 4.5) SELECT * FROM CityTopRatedHotels WHERE city = 'New York';
WITH MultiCountryUsers AS (SELECT DISTINCT u.user_id, COUNT(DISTINCT u.country) AS country_count FROM users u GROUP BY u.user_id HAVING COUNT(DISTINCT u.country) > 1) SELECT u.name, m.country_count FROM users u JOIN MultiCountryUsers m ON u.user_id = m.user_id;
WITH RoomAvailability AS (SELECT h.hotel_id, rt.name AS room_type, AVG(rt.availability) AS avg_available_rooms FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id, rt.name) SELECT h.name, ra.room_type, ra.avg_available_rooms FROM hotel h JOIN RoomAvailability ra ON h.hotel_id = ra.hotel_id;
WITH UserReviewStats AS (SELECT r.user_id, COUNT(r.review_id) AS total_reviews, AVG(r.ratings.Overall) AS avg_rating FROM reviews r GROUP BY r.user_id) SELECT u.name, urs.total_reviews, urs.avg_rating FROM users u JOIN UserReviewStats urs ON u.user_id = urs.user_id WHERE urs.total_reviews > 5;
WITH RecentBookings AS (SELECT b.booking_id, b.hotel_id, b.checkin, b.checkout FROM bookings b WHERE b.checkin > '2023-10-01') SELECT h.name, rb.checkin, rb.checkout FROM hotel h JOIN RecentBookings rb ON h.hotel_id = rb.hotel_id;
WITH GeoLocationHotels AS (SELECT hotel_id, name, geo FROM hotel WHERE geo.lat BETWEEN 40 AND 41 AND geo.long BETWEEN -75 AND -73) SELECT * FROM GeoLocationHotels;
WITH ReviewDetails AS (SELECT r.review_id, r.user_id, r.hotel_id, r.ratings.Overall FROM reviews r WHERE r.ratings.Overall > 4) SELECT rd.*, h.name AS hotel_name, u.name AS user_name FROM ReviewDetails rd JOIN hotel h ON rd.hotel_id = h.hotel_id JOIN users u ON rd.user_id = u.user_id;
WITH PaymentStatusSummary AS (SELECT p.payment_status, COUNT(p.booking_id) AS booking_count FROM bookings p GROUP BY p.payment_status) SELECT * FROM PaymentStatusSummary WHERE booking_count > 5;
WITH FrequentVisitors AS (SELECT b.user_id, COUNT(b.hotel_id) AS visit_count FROM bookings b GROUP BY b.user_id HAVING COUNT(b.hotel_id) > 3) SELECT u.name, f.visit_count FROM users u JOIN FrequentVisitors f ON u.user_id = f.user_id;
WITH TotalRevenuePerHotel AS (SELECT b.hotel_id, SUM(b.total_price) AS total_revenue FROM bookings b GROUP BY b.hotel_id) SELECT h.name, t.total_revenue FROM hotel h JOIN TotalRevenuePerHotel t ON h.hotel_id = t.hotel_id WHERE t.total_revenue > 1000;
WITH HighRatedRooms AS (SELECT rt.name AS room_type, AVG(r.ratings.Rooms) AS avg_room_rating FROM reviews r JOIN hotel h ON r.hotel_id = h.hotel_id UNNEST h.room_types AS rt GROUP BY rt.name HAVING AVG(r.ratings.Rooms) > 4) SELECT * FROM HighRatedRooms;
WITH UserCountryDistribution AS (SELECT country, COUNT(user_id) AS user_count FROM users GROUP BY country) SELECT * FROM UserCountryDistribution WHERE user_count > 10;
WITH BookingRoomTypeCounts AS (SELECT b.hotel_id, b.room_type, COUNT(b.booking_id) AS booking_count FROM bookings b GROUP BY b.hotel_id, b.room_type) SELECT h.name, brtc.room_type, brtc.booking_count FROM hotel h JOIN BookingRoomTypeCounts brtc ON h.hotel_id = brtc.hotel_id;
WITH ExpensiveRooms AS (SELECT h.name, MAX(rt.price) AS max_price FROM hotel h UNNEST h.room_types AS rt GROUP BY h.name HAVING MAX(rt.price) > 200) SELECT * FROM ExpensiveRooms;
WITH TopRatedHotelsWithFreeAmenities AS (SELECT h.hotel_id, h.name FROM hotel h WHERE h.free_parking = TRUE AND h.free_wifi = TRUE AND h.rating >= 4) SELECT * FROM TopRatedHotelsWithFreeAmenities;
WITH HotelBookings AS (SELECT b.hotel_id, COUNT(b.booking_id) AS booking_count FROM bookings b GROUP BY b.hotel_id) SELECT h.name, hb.booking_count FROM hotel h JOIN HotelBookings hb ON h.hotel_id = hb.hotel_id;
WITH HighlyRatedHotelReviews AS (SELECT r.hotel_id, AVG(r.ratings.Overall) AS avg_overall FROM reviews r GROUP BY r.hotel_id HAVING AVG(r.ratings.Overall) > 4.5) SELECT h.name, hr.avg_overall FROM hotel h JOIN HighlyRatedHotelReviews hr ON h.hotel_id = hr.hotel_id;
WITH UserBookingsTotal AS (SELECT user_id, COUNT(booking_id) AS total_bookings FROM bookings GROUP BY user_id) SELECT u.name, ubt.total_bookings FROM users u JOIN UserBookingsTotal ubt ON u.user_id = ubt.user_id WHERE ubt.total_bookings > 2;
WITH LowestRatedRooms AS (SELECT rt.name AS room_type, MIN(r.ratings.Rooms) AS min_room_rating FROM reviews r JOIN hotel h ON r.hotel_id = h.hotel_id UNNEST h.room_types AS rt GROUP BY rt.name) SELECT * FROM LowestRatedRooms;
WITH HotelReviewCount AS (SELECT h.hotel_id, COUNT(r.review_id) AS review_count FROM hotel h JOIN reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_id) SELECT h.name, hrc.review_count FROM hotel h JOIN HotelReviewCount hrc ON h.hotel_id = hrc.hotel_id;
WITH BookingMethodSummary AS (SELECT b.payment_method, COUNT(b.booking_id) AS method_count FROM bookings b GROUP BY b.payment_method) SELECT * FROM BookingMethodSummary WHERE method_count > 2;
WITH UsersWithMultipleReviews AS (SELECT r.user_id, COUNT(r.review_id) AS review_count FROM reviews r GROUP BY r.user_id HAVING COUNT(r.review_id) > 1) SELECT u.name, um.review_count FROM users u JOIN UsersWithMultipleReviews um ON u.user_id = um.user_id;
WITH SpaciousHotels AS (SELECT hotel_id, name, rooms FROM hotel WHERE rooms > 50) SELECT * FROM SpaciousHotels;
WITH TopPaymentMethods AS (SELECT payment_method, COUNT(booking_id) AS total_payments FROM bookings GROUP BY payment_method) SELECT * FROM TopPaymentMethods WHERE total_payments > 10;
WITH DiverseCountryUsers AS (SELECT DISTINCT u.user_id, COUNT(DISTINCT u.country) AS country_count FROM users u GROUP BY u.user_id) SELECT u.name, dcu.country_count FROM users u JOIN DiverseCountryUsers dcu ON u.user_id = dcu.user_id WHERE dcu.country_count > 1;
WITH UserReviewAverages AS (SELECT user_id, AVG(ratings.Overall) AS avg_overall FROM reviews GROUP BY user_id) SELECT u.name, ura.avg_overall FROM users u JOIN UserReviewAverages ura ON u.user_id = ura.user_id WHERE ura.avg_overall > 3;
WITH HotelRevenueSummary AS (SELECT b.hotel_id, SUM(b.total_price) AS revenue FROM bookings b GROUP BY b.hotel_id) SELECT h.name, hrs.revenue FROM hotel h JOIN HotelRevenueSummary hrs ON h.hotel_id = hrs.hotel_id WHERE hrs.revenue > 500;
WITH CleanlinessLowestRatings AS (SELECT r.hotel_id, MIN(r.ratings.Cleanliness) AS min_cleanliness FROM reviews r GROUP BY r.hotel_id) SELECT h.name, clr.min_cleanliness FROM hotel h JOIN CleanlinessLowestRatings clr ON h.hotel_id = clr.hotel_id;
WITH RoomTypePopularity AS (SELECT rt.name AS room_type, COUNT(rt.name) AS popularity_count FROM hotel h UNNEST h.room_types AS rt GROUP BY rt.name) SELECT * FROM RoomTypePopularity ORDER BY popularity_count DESC;
WITH CityBookingCounts AS (SELECT h.city, COUNT(b.booking_id) AS city_booking_count FROM hotel h JOIN bookings b ON h.hotel_id = b.hotel_id GROUP BY h.city) SELECT * FROM CityBookingCounts WHERE city_booking_count > 5;
WITH UsersFromSameCity AS (SELECT u.city, COUNT(u.user_id) AS user_count FROM users u GROUP BY u.city HAVING COUNT(u.user_id) > 1) SELECT u.name, ufs.city FROM users u JOIN UsersFromSameCity ufs ON u.city = ufs.city;
WITH ExpensiveHotels AS (SELECT h.hotel_id, MAX(rt.price) AS max_price FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id HAVING MAX(rt.price) > 250) SELECT h.name, eh.max_price FROM hotel h JOIN ExpensiveHotels eh ON h.hotel_id = eh.hotel_id;
WITH UserUniqueBookingCount AS (SELECT user_id, COUNT(DISTINCT hotel_id) AS unique_hotels FROM bookings GROUP BY user_id) SELECT u.name, uubc.unique_hotels FROM users u JOIN UserUniqueBookingCount uubc ON u.user_id = uubc.user_id;
WITH FrequentReviewers AS (SELECT user_id, COUNT(review_id) AS review_count FROM reviews GROUP BY user_id) SELECT u.name, fr.review_count FROM users u JOIN FrequentReviewers fr ON u.user_id = fr.user_id WHERE fr.review_count > 5;
WITH PriceRangeHotels AS (SELECT h.hotel_id, MIN(rt.price) AS min_price, MAX(rt.price) AS max_price FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id) SELECT h.name, prh.min_price, prh.max_price FROM hotel h JOIN PriceRangeHotels prh ON h.hotel_id = prh.hotel_id;
WITH BookingsPerPaymentMethod AS (SELECT payment_method, COUNT(booking_id) AS method_count FROM bookings GROUP BY payment_method) SELECT * FROM BookingsPerPaymentMethod WHERE method_count > 3;
WITH UserReviewDetail AS (SELECT r.user_id, r.ratings.Overall, r.comments FROM reviews r) SELECT u.name, urd.Overall, urd.comments FROM users u JOIN UserReviewDetail urd ON u.user_id = urd.user_id WHERE urd.Overall > 3;
WITH HotelRecentReviews AS (SELECT r.hotel_id, COUNT(r.review_id) AS recent_review_count FROM reviews r WHERE r.review_date > '2023-01-01' GROUP BY r.hotel_id) SELECT h.name, hrr.recent_review_count FROM hotel h JOIN HotelRecentReviews hrr ON h.hotel_id = hrr.hotel_id;
WITH DistinctPaymentMethods AS (SELECT DISTINCT payment_method FROM bookings) SELECT * FROM DistinctPaymentMethods;
WITH RoomPriceDistribution AS (SELECT rt.name AS room_type, rt.price FROM hotel h UNNEST h.room_types AS rt) SELECT * FROM RoomPriceDistribution WHERE rt.price BETWEEN 100 AND 150;
WITH CleanlinessRatingSummary AS (SELECT hotel_id, AVG(ratings.Cleanliness) AS avg_cleanliness FROM reviews GROUP BY hotel_id) SELECT h.name, crs.avg_cleanliness FROM hotel h JOIN CleanlinessRatingSummary crs ON h.hotel_id = crs.hotel_id WHERE crs.avg_cleanliness > 4;
WITH DistinctUserCountries AS (SELECT DISTINCT country FROM users) SELECT * FROM DistinctUserCountries;
WITH UserBookingStats AS (SELECT user_id, COUNT(booking_id) AS total_bookings, SUM(total_price) AS total_spent FROM bookings GROUP BY user_id) SELECT u.name, ubs.total_bookings, ubs.total_spent FROM users u JOIN UserBookingStats ubs ON u.user_id = ubs.user_id WHERE ubs.total_bookings > 2;
WITH HotelAverageRatings AS (SELECT hotel_id, AVG(ratings.Overall) AS avg_overall_rating FROM reviews GROUP BY hotel_id) SELECT h.name, har.avg_overall_rating FROM hotel h JOIN HotelAverageRatings har ON h.hotel_id = har.hotel_id WHERE har.avg_overall_rating > 3;
WITH HotelRoomTypePriceRange AS (SELECT h.hotel_id, rt.name AS room_type, MIN(rt.price) AS min_price, MAX(rt.price) AS max_price FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id, rt.name) SELECT h.name, hrtr.room_type, hrtr.min_price, hrtr.max_price FROM hotel h JOIN HotelRoomTypePriceRange hrtr ON h.hotel_id = hrtr.hotel_id;
WITH UsersWithPositiveComments AS (SELECT r.user_id, r.comments FROM reviews r WHERE comments LIKE '%great%') SELECT u.name, upc.comments FROM users u JOIN UsersWithPositiveComments upc ON u.user_id = upc.user_id;
WITH AllUniqueRoomTypes AS (SELECT DISTINCT rt.name AS room_type FROM hotel UNNEST room_types AS rt) SELECT * FROM AllUniqueRoomTypes;
WITH HotelTypesCount AS (SELECT h.type, COUNT(h.hotel_id) AS type_count FROM hotel h GROUP BY h.type) SELECT * FROM HotelTypesCount HTC WHERE HTC.type_count = (SELECT MAX(type_count) FROM HotelTypesCount);
WITH LongStayBookings AS (SELECT b.booking_id, b.user_id, DATE_DIFF_STR(b.checkout, b.checkin, 'day') AS stay_duration FROM `bookings` b) SELECT u.name, lb.stay_duration FROM `users` u JOIN LongStayBookings lb ON META(u).id = lb.user_id WHERE lb.stay_duration > 5;
WITH CheckInCheckOutPair AS (SELECT STR_TO_MILLIS(checkin) AS checkin, STR_TO_MILLIS(checkout) AS checkout FROM bookings WHERE STR_TO_MILLIS(checkin) > STR_TO_MILLIS('2023-09-01') AND STR_TO_MILLIS(checkout) < STR_TO_MILLIS('2023-11-01')) SELECT MIN(checkin) AS earliest_checkin, MAX(checkout) AS latest_checkout FROM CheckInCheckOutPair;
WITH ReviewMetrics AS ( SELECT r.hotel_id, AVG(r.ratings.`Value`) AS avg_value, AVG(r.ratings.Cleanliness) AS avg_cleanliness FROM reviews r GROUP BY r.hotel_id) SELECT h.name, rm.avg_value, rm.avg_cleanliness FROM hotel h JOIN ReviewMetrics rm ON h.hotel_id = rm.hotel_id;
WITH PopularAmenityHotels AS (SELECT h.hotel_id, h.name FROM hotel h UNNEST h.amenities AS amenity WHERE amenity = 'Pool') SELECT * FROM PopularAmenityHotels;
WITH HotelCapacity AS (SELECT h.hotel_id, SUM(rt.availability) AS total_capacity FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id) SELECT h.name, hc.total_capacity FROM hotel h JOIN HotelCapacity hc ON h.hotel_id = hc.hotel_id;
WITH BookingsDuringPeakTime AS (SELECT b.booking_id, b.hotel_id, b.checkin, b.checkout FROM bookings b WHERE DATE_PART_STR(b.checkin, 'month') BETWEEN 6 AND 8) SELECT h.name, bdpt.checkin, bdpt.checkout FROM hotel h JOIN BookingsDuringPeakTime bdpt ON h.hotel_id = bdpt.hotel_id;
WITH RoomAvailabilitySummary AS ( SELECT h.hotel_id, rt.name AS room_type, AVG(rt.availability) AS avg_availability FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id, rt.name ) SELECT h.name, ras.room_type, ras.avg_availability FROM hotel h JOIN RoomAvailabilitySummary ras ON h.hotel_id = ras.hotel_id;
WITH HighlyRatedRoomsByType AS ( SELECT rt.name AS room_type, AVG(r.ratings.Rooms) AS avg_room_rating FROM reviews r JOIN hotel h ON r.hotel_id = h.hotel_id UNNEST h.room_types AS rt GROUP BY rt.name HAVING AVG(r.ratings.Rooms) > 4 ) SELECT * FROM HighlyRatedRoomsByType;
WITH PeakSeasonBookings AS (SELECT booking_id, checkin, checkout FROM bookings WHERE DATE_PART_STR(checkin, 'month') IN ["12", "01", "02"]) SELECT * FROM PeakSeasonBookings;
WITH CheckOutMonthDistribution AS (SELECT DATE_PART_STR(checkout, 'month') AS checkout_month, COUNT(booking_id) AS count FROM bookings GROUP BY DATE_PART_STR(checkout, 'month')) SELECT * FROM CheckOutMonthDistribution WHERE count > 5;
WITH AverageRoomCapacity AS (SELECT h.hotel_id, AVG(rt.availability) AS avg_capacity FROM hotel h UNNEST h.room_types AS rt GROUP BY h.hotel_id) SELECT h.name, arc.avg_capacity FROM hotel h JOIN AverageRoomCapacity arc ON h.hotel_id = arc.hotel_id WHERE arc.avg_capacity > 5;